#!/usr/bin/python

DOCUMENTATION='''
---
author: Dmitry Makovey
module: rpm_query
short_description: Check RPM package status
description:
  - This module queries RPM database setting Ansible facts for queried packages
version_added: "0.1"
options:
  names:
    description:
    - names of the packages to query comma-separated
    required: true
  state:
    choices: [ "present", "absent", "stat" ]
    default: present
    description:
    - whether packages should be tested for absence, presence or just stat packages
    required: false
'''

EXAMPLES='''
- rpm_query: names=httpd,php state=present
'''

'''
facts:
   - all_packages (with states listed)
   - present_packages
   - absent_packages

'''

import rpm


def main():
    module=AnsibleModule(
            argument_spec = dict(
                    names=dict(aliases=["name","pkg"],type='list',required=True),
                    state=dict(choices=["absent", "present","stat"], default='present'),
                ),
            supports_check_mode=True
        )

    state = module.params['state']
    packages=module.params['names']
    failed=False
    
    ts = rpm.TransactionSet()

    # rpm.addMacro("_dbpath", path_to_rpm_database)
    res={}
    present_packages={}

    absent_packages={}
    
    for p in packages:
    
        mi = ts.dbMatch('name', p)
        
        if not mi:
            res[p]={'state':'absent'}
            absent_packages[p]=res[p]
            
        while mi:
            try:
                h = mi.next()
            except StopIteration:
                if not res.has_key(p):
                    res[p]={'state':'absent'}
                    absent_packages[p]=res[p]
                break
            res[p]={'version':h['version'],'release':h['release'],'state':'present'}
            present_packages[p]=res[p]
            
    if state != 'stat':
        for p in res.keys():
            if res[p]['state']!=state:
                failed=True
                
    module.exit_json(changed=False,ansible_facts={'all_packages':res,'present_packages':present_packages,'absent_packages':absent_packages},failed=failed)
    
    
# include magic from lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
